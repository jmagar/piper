---
description: "Explains how to use the dev.sh script to manage the local development environment."
globs:
  - "dev.sh"
  - "docker-compose.dev.yml"
alwaysApply: false
---

# Development Environment (`dev.sh`)

This project uses a `scripts/dev.sh` script as a convenient wrapper around `docker-compose` to manage the local development environment.

## Running the Script

All commands should be run from the project root.

```bash
./scripts/dev.sh <command>
```

## Available Commands

Here is a list of the available commands and what they do:

| Command | Description | Example |
|---|---|---|
| `up` | Starts all development services in detached mode. | `./scripts/dev.sh up` |
| `down` | Stops and removes all development services and their networks. | `./scripts/dev.sh down` |
| `logs [service]` | Tails the logs for all services or a specific service. | `./scripts/dev.sh logs piper-app` |
| `build [service]` | Builds or rebuilds the Docker images for all services or a specific one. Uses `--no-cache`. | `./scripts/dev.sh build` |
| `ps` | Lists all running development containers. | `./scripts/dev.sh ps` |
| `restart [service]` | Restarts all services or a specific one. | `./scripts/dev.sh restart piper-app` |
| `exec <service> <cmd>` | Executes a command inside a running container. | `./scripts/dev.sh exec piper-app sh` |
| `prisma-generate` | Runs `npx prisma generate` inside the `piper-app` container. | `./scripts/dev.sh prisma-generate` |
| `prisma-migrate-dev`| Runs `npx prisma migrate dev` inside the `piper-app` container. You can pass a name for the migration. | `./scripts/dev.sh prisma-migrate-dev --name add-new-field` |
| `prisma-studio` | Starts Prisma Studio, making it accessible at `http://localhost:5555`. | `./scripts/dev.sh prisma-studio` |

## Common Workflows

### Starting the Environment for the First Time
```bash
./scripts/dev.sh build
./scripts/dev.sh up
./scripts/dev.sh prisma-migrate-dev
```

### Stopping the Environment
```bash
./scripts/dev.sh down
```

### Viewing Logs
To see the logs from the main application container:
```bash
./scripts/dev.sh logs piper-app
```
```

With the creation of this file, we now have a comprehensive set of rules covering the main development workflows for this project. This should significantly improve consistency and make it easier for anyone to contribute.