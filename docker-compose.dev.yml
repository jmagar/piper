# version: '3.8' # Obsolete, removing

services:
  piper-app-dev:
    container_name: piper-app-dev
    labels:
      - com.centurylinklabs.watchtower.enable=false
    build:
      context: .
      dockerfile: Dockerfile.dev
    user: "0:0" # Explicitly run as root
    command: sh -c "npx prisma db push && npm run dev"
    ports:
      - "8630:3000" # Expose port 3000 on host port 8630
    env_file:
      - .env # Load environment variables from .env file
    environment:
      # Add or override any environment variables here if needed
      - NODE_ENV=development
      - DATABASE_URL=postgresql://piper:piper@piper-db-dev:5432/piper
      - REDIS_URL=redis://piper-cache-dev:6379
      # CHOKIDAR_USEPOLLING=true # Uncomment if hot reloading is unreliable
    volumes:
      # Mounts for hot reloading application code
      - .:/app # Mount current directory to /app in container
      - /app/node_modules # Isolate container's node_modules from host's
      # Persistent volumes for data (same as your production-like compose)
      - ./uploads:/uploads
      - ./config:/config
      - ./logs:/logs
      # Other mounts you had, ensure these paths exist on your host or are appropriate for dev
      - /mnt/user/data:/data
      - /mnt/user/code:/code
      - /mnt/user/docs:/docs
      - /mnt/user/compose:/compose
      - /mnt/user/downloads:/downloads
    depends_on:
      - piper-db-dev
      - piper-cache-dev
    restart: unless-stopped # Or 'no' for development if you prefer manual restarts

  piper-db-dev:
    container_name: piper-db-dev
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: piper
      POSTGRES_USER: piper
      POSTGRES_PASSWORD: piper # Consider using a secret or .env for password
    volumes:
      - piper-db-dev:/var/lib/postgresql/data
    ports:
      - "8631:5432" # Expose DB port to host, consistent with main docker-compose.yml
    restart: unless-stopped

  piper-cache-dev:
    container_name: piper-cache-dev
    image: redis:7-alpine
    ports:
      - "8632:6379" # Expose Redis port to host, consistent with main docker-compose.yml
    restart: unless-stopped
    volumes:
      - piper-cache-dev:/data

volumes:
  piper-db-dev: # Defines the named volume for PostgreSQL data persistence
  piper-cache-dev: # Defines the named volume for Redis data persistence
